// Generated by CoffeeScript 1.8.0
var PriorityQueue;

PriorityQueue = function() {
  var better, h, self, sift_down, sift_up, swap;
  h = [];
  better = function(a, b) {
    return h[a].priority < h[b].priority;
  };
  swap = function(a, b) {
    var _ref;
    return _ref = [h[b], h[a]], h[a] = _ref[0], h[b] = _ref[1], _ref;
  };
  sift_down = function() {
    var best, c1, c2, max, n;
    max = h.length;
    n = 0;
    while (n < max) {
      c1 = 2 * n + 1;
      c2 = c1 + 1;
      best = n;
      if (c1 < max && better(c1, best)) {
        best = c1;
      }
      if (c2 < max && better(c2, best)) {
        best = c2;
      }
      if (best === n) {
        return;
      }
      swap(n, best);
      n = best;
    }
  };
  sift_up = function() {
    var n, parent;
    n = h.length - 1;
    while (n > 0) {
      parent = Math.floor((n - 1) / 2);
      if (better(parent, n)) {
        return;
      }
      swap(n, parent);
      n = parent;
    }
  };
  return self = {
    size: function() {
      return h.length;
    },
    push: function(priority, value1, value2) {
      var elem;
      elem = {
        priority: priority,
        value1: value1,
        value2: value2
      };
      h.push(elem);
      return sift_up();
    },
    pop: function() {
      var elem, last;
      if (h.length === 0) {
        throw Error("cannot pop from empty queue");
      }
      elem = h[0];
      last = h.pop();
      if (h.length > 0) {
        h[0] = last;
        sift_down();
      }
      return elem;
    }
  };
};
